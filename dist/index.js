(()=>{var __webpack_modules__={979:module=>{(()=>{var __webpack_modules__={691:(e,t,_)=>{const o=_(563);e.exports=()=>{const e=new o;e.authenticate({type:"token",token:process.env.GITHUB_TOKEN});return e}},327:(e,t,_)=>{const o=_(42);const r=72;const n=["Preselect","Refactor","Fixed","Closed"];async function isVerb(e){const t=new o;const _=await t.isVerb(e);return _||n.includes(e)}e.exports=async function(e){const[t]=e.split("\n");if(/^v([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/.test(t)){return true}if(t.length>r){throw new Error(`Subject exceeds maximum length of ${r} characters`)}const _=/^(\!(?:fixup|squash))/.exec(t);if(_!==null){throw new Error(`Commit includes rebase instruction: ${_[0]}`)}const[o,n]=t.split(" ");if(!/^[A-Z]{1}/.test(o)){throw new Error("Subject does not start with an uppercase letter")}const s=await isVerb(o);if(!s){throw new Error("Subject does not seem to start with a verb")}if(/[bcdfghjklmnpqrstvwxz]+ed$/.test(o)){throw new Error("Subject does not seem to start with an imperative verb")}return true}},563:module=>{module.exports=eval("require")("@octokit/rest")},42:module=>{module.exports=eval("require")("wordpos")}};var __webpack_module_cache__={};function __nccwpck_require2_(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var _=__webpack_module_cache__[e]={exports:{}};var o=true;try{__webpack_modules__[e](_,_.exports,__nccwpck_require2_);o=false}finally{if(o)delete __webpack_module_cache__[e]}return _.exports}if(typeof __nccwpck_require2_!=="undefined")__nccwpck_require2_.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require2_(691);const t=__nccwpck_require2_(327);async function main(){const _=e();const[o,r]=process.env.GITHUB_REPOSITORY.split("/");const n=await _.git.getCommit({owner:o,repo:r,commit_sha:process.env.GITHUB_SHA});try{await t(n.data.message);console.log("\n\nThis commit looks beautiful\n\n");process.exit(0)}catch(e){const t=n.data.sha;const[s]=n.data.message.split("\n");const{data:c}=await _.pulls.list({owner:o,repo:r,sha:t});console.log(`Found ${c.length} pull requests for commit ${t}`);for(const n of c){if(n.state!=="open"){console.log(`Skipping Pull Request ${n.number} because it is not open but ${n.state}`);continue}const c=n.number;await _.issues.createComment({owner:o,repo:r,issue_number:c,body:`Oh no! It looks like the commit message of ${t} is invalid.\n\n          Please update it to match the conventional commit format.\n\n\n\n          The message was: \n\n          > ${s}.\n\n\n\n          Here is the error: ${e.message}`})}console.log(`\n\n${e.message}\n\n`);process.exit(1)}}main()})();module.exports=__webpack_exports__})()}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var _=__webpack_module_cache__[e]={exports:{}};var o=true;try{__webpack_modules__[e](_,_.exports,__nccwpck_require__);o=false}finally{if(o)delete __webpack_module_cache__[e]}return _.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__=__nccwpck_require__(979);module.exports=__webpack_exports__})();