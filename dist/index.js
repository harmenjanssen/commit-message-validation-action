(()=>{var __webpack_modules__={691:(e,t,o)=>{const s=o(563);e.exports=()=>{const e=new s;e.authenticate({type:"token",token:process.env.GITHUB_TOKEN});return e}},327:(e,t,o)=>{const s=o(42);const n=72;const r=["Preselect","Refactor","Fixed","Closed"];async function isVerb(e){const t=new s;const o=await t.isVerb(e);return o||r.includes(e)}e.exports=async function(e){const[t]=e.split("\n");if(/^v([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/.test(t)){return true}if(t.length>n){throw new Error(`Subject exceeds maximum length of ${n} characters`)}const o=/^(\!(?:fixup|squash))/.exec(t);if(o!==null){throw new Error(`Commit includes rebase instruction: ${o[0]}`)}const[s,r]=t.split(" ");if(!/^[A-Z]{1}/.test(s)){throw new Error("Subject does not start with an uppercase letter")}const a=await isVerb(s);if(!a){throw new Error("Subject does not seem to start with a verb")}if(/[bcdfghjklmnpqrstvwxz]+ed$/.test(s)){throw new Error("Subject does not seem to start with an imperative verb")}return true}},563:module=>{module.exports=eval("require")("@octokit/rest")},42:module=>{module.exports=eval("require")("wordpos")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var o=__webpack_module_cache__[e]={exports:{}};var s=true;try{__webpack_modules__[e](o,o.exports,__nccwpck_require__);s=false}finally{if(s)delete __webpack_module_cache__[e]}return o.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(691);const t=__nccwpck_require__(327);async function main(){const o=e();const[s,n]=process.env.GITHUB_REPOSITORY.split("/");const r=await o.git.getCommit({owner:s,repo:n,commit_sha:process.env.GITHUB_SHA});try{await t(r.data.message);console.log("\n\nThis commit looks beautiful\n\n");process.exit(0)}catch(e){const t=r.data.sha;const[a]=r.data.message.split("\n");const{data:c}=await o.pulls.list({owner:s,repo:n,sha:t});console.log(`Found ${c.length} pull requests for commit ${t}`);for(const r of c){if(r.state!=="open"){console.log(`Skipping Pull Request ${r.number} because it is not open but ${r.state}`);continue}const c=r.number;await o.issues.createComment({owner:s,repo:n,issue_number:c,body:`Oh no! It looks like the commit message of ${t} is invalid.\n\n          Please update it to match the conventional commit format.\n\n\n\n          The message was: \n\n          > ${a}.\n\n\n\n          Here is the error: ${e.message}`})}console.log(`\n\n${e.message}\n\n`);process.exit(1)}}main()})();module.exports=__webpack_exports__})();